sudo hostnamectl set-hostname master  ---> on master box
bash
sudo hostnamectl set-hostname node1 ---> on client box
bash
sudo hostnamectl set-hostname node2 ---> on client2 box if present
bash


root# sudo passwd ec2-user --> set username and password ---> nod1
root# sudo passwd root  ---> set username and password for roor ---> nod1

vi /etc/ssh/sshd_config  ---> open this file node1

PasswordAuthentication no ---> change it to yes

:wq --> save and exit

 systemctl reload sshd --> reload form node1

[root@master ~]# ssh ec2-user@nod1IP "hostname" ---> test the SSH connection 
ec2-user@192.168.56.116's password:
node1

vi /etc/sudoers 
%wheel  ALL=(ALL)       NOPASSWD: ALL --> on all the servers make sure NOPASSWD is allowed

usermod -g wheel ec2-user --> run on all the servers 

sudo yum install ansible ---> run only on master 

ansible --version ---> check the version

ansible localhost -m ping  --> test the connection 



sudo vi /etc/ansible/hosts --> add node1 and node2 IP's in hosts file

ansible all -m ping --user ec2-user --ask-pass    ---> check the client connection 


========== Ip's/hosts and groups ============

ansible 192.168.56.117,192.168.56.119 -m ping --user ec2-user --ask-pass  ---> pass selected hostnames not all from the inventory

sudo vi /etc/ansible/hosts  --> create a group in inventory file 
[web]
192.168.56.116

[db]
192.168.56.117
192.168.56.118

[backup]
192.168.56.119

ansible web  -m ping --user ec2-user --ask-pass               ---> web group
ansible db  -m ping --user ec2-user --ask-pass                ---> db group
ansible backup  -m ping --user ec2-user --ask-pass	          ---> backup group


======= checking user ID and sudo access ====


ansible all -m shell -a "hostname; whoami" --user ec2-user --ask-pass   ---> check the hostname and user is ec2-user
192.168.56.117 | SUCCESS | rc=0 >>
node2
ec2-user

192.168.56.116 | SUCCESS | rc=0 >>
node1
ec2-user


ansible all -m shell -a "hostname; whoami" --user ec2-user --ask-pass --become-method=sudo --become-user=root --become   ---> check the sudo access
192.168.56.117 | SUCCESS | rc=0 >>
node2
root

192.168.56.116 | SUCCESS | rc=0 >>
node1
root


=========  copy =============
ansible all -m copy -a "content=testing dest=/tmp/data" --user ec2-user --ask-pass   ----> create a new file using ec2-user

[root@node1 ~]# cat /tmp/data    ---> check the file is created in node1 
testing

[root@node1 ~]# ls -l /tmp/data         -------------> check the user and group 
-rw-r--r--. 1 ec2-user wheel 7 Apr 16 14:39 /tmp/data

[root@node1 ~]# rm -rf  /tmp/data   --> delete the file


ansible all -m copy -a "content=testing dest=/tmp/data" --user ec2-user --ask-pass --become-method=sudo --become-user=root --become  --> method is sudo

[root@node1 ~]# cat /tmp/data    ---> check the file is created in node1 
testing

[root@node1 ~]# ls -l /tmp/data         -------------> check the user and group 
-rw-r--r--. 1 root root 7 Apr 16 14:39 /tmp/data

[root@node1 ~]# rm -rf  /tmp/data   --> delete the file

[root@node1 ~]# useradd admin  --> create user for testing in node1 

ansible all -m copy -a "content=testing dest=/tmp/data owner=admin group=wheel" --user ec2-user --ask-pass --become-method=sudo --become-user=root --become  --> create file using different account

[root@node1 ~]# ls -l /tmp/data --------------> check the user name is admin 
-rw-r--r--. 1 admin wheel 7 Apr 16 14:45 /tmp/data
[root@node1 ~]#


